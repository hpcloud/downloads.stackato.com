#!/bin/sh

set -o errexit -o nounset -o xtrace

which -s aws
which -s jq

latest_object_with_prefix() {
    prefix=${1}
    aws s3 ls --recursive "downloads.stackato.com/${prefix}/" | awk '/\.zip$/ { print $4 }' | sort | tail -n 1
}

to_vm_prefix() {
    sed -E 's#[[:alnum:]]+\.zip$##'
}

to_client_prefix() {
    sed -E 's#(/[[:alpha:]]+-[[:digit:]\.]+-).+\.zip$#\1#'
}

website_configuration() {
    aws s3api get-bucket-website --bucket downloads.stackato.com
}

latest_windea_rules() {
    echo '{ "RoutingRules":'
    website_configuration | jq --raw-output ".RoutingRules | map(if (.Condition.KeyPrefixEquals | startswith(\"windea/latest\")) then .Redirect.ReplaceKeyWith = \"$(latest_windea_download)\" else . end)"
    echo '}'
update_rule() {
    prefix=${1}
    action=${2}
    target=${3}
    website_configuration | jq --raw-output "[.RoutingRules[] | select(.Condition.KeyPrefixEquals | startswith(\"$prefix\"))] | map(.Redirect.$action = \"$target\")"
}

updated_rules() {
    printf '{ "RoutingRules":'
    {
        update_rule windea/latest  ReplaceKeyWith       "$(latest_object_with_prefix 'windea')"
        update_rule client/latest/ ReplaceKeyPrefixWith "$(latest_object_with_prefix 'client' | to_client_prefix)"
        update_rule vm/latest/     ReplaceKeyPrefixWith "$(latest_object_with_prefix 'vm'     | to_vm_prefix)"
    } | jq --slurp add
    printf '}\n'
}

regenerate() {
    { website_configuration && latest_windea_rules; } | jq --slurp add
}

CONFIG=$(mktemp)
regenerate > "${CONFIG}"
aws s3api put-bucket-website --bucket downloads.stackato.com --website-configuration file://${CONFIG}
rm -f "${CONFIG}"
